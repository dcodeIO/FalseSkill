define(["require","exports"],function(require,exports){function newRating(){return{rating:exports.InitialRating,deviation:exports.InitialDeviation,volatility:exports.InitialVolatility}}function calculateRating(player,opponents,outcomes){function g(deviation){return 1/Math.sqrt(1+3*Math_sq(deviation)/PiSq)}function E(rating,opponentRating,opponentDeviation){return 1/(1+Math.exp(-g(opponentDeviation)*(rating-opponentRating)))}function f(x){var ePowX=Math.pow(Math.E,x);return ePowX*(Math_sq(D)-deviationSq-v-ePowX)/Math_sq(2*(deviationSq+v+ePowX))-(x-a)/TauSq}if(opponents.length!==outcomes.length)throw Error("number of opponents is different than number of outcomes");if(0===opponents.length)return calculateRatingDidNotCompete(player);player=toGlicko2Scale(player),opponents=opponents.map(toGlicko2Scale);var v=0;opponents.forEach(function(opponent){var e=E(player.rating,opponent.rating,opponent.deviation);v+=Math_sq(g(opponent.deviation))*e*(1-e)}),v=1/v;var DSum=0;opponents.forEach(function(opponent,index){DSum+=g(opponent.deviation)*(outcomes[index]-E(player.rating,opponent.rating,opponent.deviation))});var D=v*DSum,a=Math.log(Math_sq(player.volatility)),deviationSq=Math_sq(player.deviation),A=a,DSq=Math_sq(D),deviationSq=Math_sq(player.deviation),B=0;if(DSq>deviationSq+v)B=Math.log(DSq-deviationSq-v);else{for(var k=1;f(a-k*exports.Tau)<0;)k+=1;B=a-k*exports.Tau}for(var fA=f(A),fB=f(B);Math.abs(B-A)>1e-6;){var C=A+(A-B)*fA/(fB-fA),fC=f(C);0>fC*fB?(A=B,fA=fB):fA/=2,B=C,fB=fC}var newVolatility=Math.pow(Math.E,A/2),preRatingDeviation=Math.sqrt(deviationSq+Math_sq(newVolatility)),newDeviation=1/Math.sqrt(1/Math_sq(preRatingDeviation)+1/v),newRating=player.rating+Math_sq(newDeviation)*DSum;return toGlicko1Scale({rating:newRating,deviation:newDeviation,volatility:newVolatility})}function calculateRatingDidNotCompete(player){return player=toGlicko2Scale(player),player.deviation=Math.sqrt(Math_sq(player.deviation)+Math_sq(player.volatility)),toGlicko1Scale(player)}function copyRating(from,to){return to.rating=from.rating,to.deviation=from.deviation,to.volatility=from.volatility,to}function updateRating(player,opponents,outcomes){copyRating(calculateRating(player,opponents,outcomes),player)}function updateRatingDidNotCompete(player){copyRating(calculateRatingDidNotCompete(player),player)}function deriveMatches(rankings,filterBy){var indexedPlayers=[],playersAlreadyIndexed=[],filteredPlayer=null;if(rankings.forEach(function(players,rank){players.forEach(function(player){if(playersAlreadyIndexed.indexOf(player)>=0)throw Error("players cannot reach multiple ranks at once");var indexedPlayer={rank:rank,player:player};indexedPlayers.push(indexedPlayer),playersAlreadyIndexed.push(player),filterBy&&player===filterBy&&(filteredPlayer=indexedPlayer)})}),filterBy&&!filteredPlayer)throw Error("there is no player matching the provided filter");var matches=[];return(filterBy?[filteredPlayer]:indexedPlayers).forEach(function(indexedPlayer){var opponents=[],outcomes=[];indexedPlayers.forEach(function(indexedOpponent){indexedPlayer!==indexedOpponent&&(opponents.push(indexedOpponent.player),indexedPlayer.rank<indexedOpponent.rank?outcomes.push(exports.Win):indexedPlayer.rank>indexedOpponent.rank?outcomes.push(exports.Loss):outcomes.push(exports.Draw))}),matches.push({player:indexedPlayer.player,opponents:opponents,outcomes:outcomes})}),matches}function updateRatings(matches){matches.forEach(function(match){updateRating(match.player,match.opponents,match.outcomes)})}function calculateMatchQualityG1(player,opponent){var expectedScore=1/(1+Math.pow(10,(opponent.rating-player.rating)/(2*exports.InitialDeviation)));return(.5-Math.abs(expectedScore-.5))/.5}function calculateMatchQuality(player,opponents){var qualities=[],min=1,max=0,sum=0,strongestOpponent=null,strongest=0;opponents.forEach(function(opponent){var quality=calculateMatchQualityG1(player,opponent);min>quality&&(min=quality),quality>max&&(max=quality),sum+=quality,qualities.push(quality),(!strongestOpponent||opponent.rating>strongestOpponent.rating)&&(strongestOpponent=opponent,strongest=quality)});var sortedQualities=qualities.slice();sortedQualities.sort();var half=sortedQualities.length/2|0,median=1&sortedQualities.length?sortedQualities[half]:(sortedQualities[half-1]+sortedQualities[half])/2;return{qualities:qualities,min:min,max:max,avg:sum/opponents.length,med:median,str:strongest}}function toGlicko2Scale(rating){return{rating:(rating.rating-1500)/173.7178,deviation:rating.deviation/173.7178,volatility:rating.volatility}}function toGlicko1Scale(rating){return{rating:173.7178*rating.rating+1500,deviation:173.7178*rating.deviation,volatility:rating.volatility}}function Math_sq(x){return x*x}exports.Tau=.75,exports.InitialRating=1500,exports.InitialDeviation=350,exports.InitialVolatility=.06,exports.Loss=0,exports.Draw=.5,exports.Win=1,exports.newRating=newRating;var PiSq=Math.PI*Math.PI,TauSq=exports.Tau*exports.Tau;exports.calculateRating=calculateRating,exports.calculateRatingDidNotCompete=calculateRatingDidNotCompete,exports.copyRating=copyRating,exports.updateRating=updateRating,exports.updateRatingDidNotCompete=updateRatingDidNotCompete,exports.deriveMatches=deriveMatches,exports.updateRatings=updateRatings,exports.calculateMatchQuality=calculateMatchQuality,exports.toGlicko2Scale=toGlicko2Scale,exports.toGlicko1Scale=toGlicko1Scale});
//# sourceMappingURL=falseskill.min.js.map